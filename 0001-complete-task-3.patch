From 51d3172b4f73496106ff319351ad0d158be94844 Mon Sep 17 00:00:00 2001
From: Milind Goel <milindgoel15@gmail.com>
Date: Fri, 13 Oct 2023 20:39:05 +0530
Subject: [PATCH] complete task 3

---
 src/DataManipulator.ts |  30 ++++++++----
 src/Graph.tsx          | 109 +++++++++++++++++++++++------------------
 2 files changed, 81 insertions(+), 58 deletions(-)

diff --git a/src/DataManipulator.ts b/src/DataManipulator.ts
index 7f62295..9220011 100644
--- a/src/DataManipulator.ts
+++ b/src/DataManipulator.ts
@@ -1,20 +1,32 @@
 import { ServerRespond } from './DataStreamer';
 
 export interface Row {
-  stock: string,
-  top_ask_price: number,
+  price_abc: number,
+  price_def: number,
+  ratio: number,
+  upper_bound: number,
+  lower_bound: number,
+  trigger_alert: number | undefined,
   timestamp: Date,
 }
 
 
 export class DataManipulator {
   static generateRow(serverResponds: ServerRespond[]) {
-    return serverResponds.map((el: any) => {
-      return {
-        stock: el.stock,
-        top_ask_price: el.top_ask && el.top_ask.price || 0,
-        timestamp: el.timestamp,
-      };
-    })
+    const priceABC = (serverResponds[0].top_ask.price + serverResponds[0].top_bid.price) / 2;
+    const priceDEF = (serverResponds[1].top_ask.price + serverResponds[1].top_bid.price) / 2;
+    const ratio = priceABC / priceDEF;
+    const upperBound = 1 + 0.05;
+    const lowerBound = 1 - 0.05;
+
+    return {
+      price_abc: priceABC,
+      price_def: priceDEF,
+      ratio: ratio,
+      upper_bound: upperBound,
+      lower_bound: lowerBound,
+      trigger_alert: ratio > upperBound || ratio < lowerBound ? ratio : undefined,
+      timestamp: serverResponds[0].timestamp > serverResponds[1].timestamp ? serverResponds[0].timestamp : serverResponds[1].timestamp,
+    };
   }
 }
diff --git a/src/Graph.tsx b/src/Graph.tsx
index 277797d..6dc6918 100644
--- a/src/Graph.tsx
+++ b/src/Graph.tsx
@@ -1,60 +1,71 @@
 import React, { Component } from 'react';
-import { Table } from '@finos/perspective';
-import { ServerRespond } from './DataStreamer';
-import { DataManipulator } from './DataManipulator';
-import './Graph.css';
+import { Table, TableData } from "@finos/perspective";
+import { ServerRespond } from "./DataStreamer";
+import { DataManipulator } from "./DataManipulator";
+import "./Graph.css";
 
 interface IProps {
-  data: ServerRespond[],
+	data: ServerRespond[];
 }
 
 interface PerspectiveViewerElement extends HTMLElement {
-  load: (table: Table) => void,
+	load: (table: Table) => void;
 }
 class Graph extends Component<IProps, {}> {
-  table: Table | undefined;
-
-  render() {
-    return React.createElement('perspective-viewer');
-  }
-
-  componentDidMount() {
-    // Get element from the DOM.
-    const elem = document.getElementsByTagName('perspective-viewer')[0] as unknown as PerspectiveViewerElement;
-
-    const schema = {
-      stock: 'string',
-      top_ask_price: 'float',
-      top_bid_price: 'float',
-      timestamp: 'date',
-    };
-
-    if (window.perspective && window.perspective.worker()) {
-      this.table = window.perspective.worker().table(schema);
-    }
-    if (this.table) {
-      // Load the `table` in the `<perspective-viewer>` DOM reference.
-      elem.load(this.table);
-      elem.setAttribute('view', 'y_line');
-      elem.setAttribute('column-pivots', '["stock"]');
-      elem.setAttribute('row-pivots', '["timestamp"]');
-      elem.setAttribute('columns', '["top_ask_price"]');
-      elem.setAttribute('aggregates', JSON.stringify({
-        stock: 'distinctcount',
-        top_ask_price: 'avg',
-        top_bid_price: 'avg',
-        timestamp: 'distinct count',
-      }));
-    }
-  }
-
-  componentDidUpdate() {
-    if (this.table) {
-      this.table.update(
-        DataManipulator.generateRow(this.props.data),
-      );
-    }
-  }
+	table: Table | undefined;
+
+	render() {
+		return React.createElement("perspective-viewer");
+	}
+
+	componentDidMount() {
+		// Get element from the DOM.
+		const elem = (document.getElementsByTagName(
+			"perspective-viewer"
+		)[0] as unknown) as PerspectiveViewerElement;
+
+		const schema = {
+			price_abc: "float",
+			price_def: "float",
+			ratio: "float",
+			upper_bound: "float",
+			lower_bound: "float",
+			trigger_alert: "float",
+			timestamp: "date",
+		};
+
+		if (window.perspective && window.perspective.worker()) {
+			this.table = window.perspective.worker().table(schema);
+		}
+		if (this.table) {
+			// Load the `table` in the `<perspective-viewer>` DOM reference.
+			elem.load(this.table);
+			elem.setAttribute("view", "y_line");
+			elem.setAttribute("column-pivots", '["stock"]');
+			elem.setAttribute("row-pivots", '["timestamp"]');
+			elem.setAttribute("columns", '["top_ask_price"]');
+			elem.setAttribute(
+				"aggregates",
+				JSON.stringify({
+					price_abc: "avg",
+					price_def: "avg",
+					ratio: "avg",
+					upper_bound: "avg",
+					lower_bound: "avg",
+					trigger_alert: "avg",
+					timestamp: "distinct count",
+				})
+			);
+		}
+	}
+
+	componentDidUpdate() {
+		if (this.table) {
+			this.table.update(([
+				DataManipulator.generateRow(this.props.data),
+			] as unknown) as TableData);
+		}
+	}
 }
 
 export default Graph;
-- 
2.38.1.windows.1

